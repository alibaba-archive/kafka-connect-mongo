group 'org.apache.kafka'
version '1.2.1'

buildscript {
    ext.kotlin_version = '1.1.1'
    // confluent 3.0 -> 0.10.0.0
    // confluent 3.1 -> 0.10.1.0
    // confluent 3.2 -> 0.10.2.0
    ext.kafka_version = '0.10.2.0'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'distribution'
apply plugin: 'application'

mainClassName = "org.apache.kafka.connect.mongo.tools.ImportDataKt"

repositories {
    jcenter()
}

defaultTasks 'clean', 'assembleDist'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.apache.kafka:connect-api:$kafka_version"
    compile "org.apache.kafka:connect-json:$kafka_version"
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'
    compile 'org.json:json:20160810'
    compile 'org.apache.directory.studio:org.apache.commons.lang:2.6'
    compile 'org.mongodb:mongodb-driver:3.3.0'
    compile 'org.quartz-scheduler:quartz:2.2.3'

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.30'
    testCompile 'org.easymock:easymock:3.4'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-api-easymock:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito-common:1.6.6'
    testCompile 'org.mockito:mockito-core:2.2.22'
    testCompile('info.batey.kafka:kafka-unit:0.6') {
        exclude module: 'kafka_2.11'
    }
    testCompile "org.apache.kafka:kafka_2.11:$kafka_version"
    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.5'
}

tasks.withType(Tar) {
    compression = Compression.GZIP
}

distributions {
    main {
        contents {
            into('etc') {
                from 'etc/'
            }
        }
    }
}

task runImport(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.apache.kafka.connect.mongo.tools.ImportDataKt'
    args 'etc/producer.properties'
}

kotlin { experimental { coroutines 'enable' } }
